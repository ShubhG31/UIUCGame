MP2 Bug Log:

2.1 Bugs:

   (1)  The status bar was showing up in 2 places, at the top of the screen and at the bottom. So the reason of the bug was found, was due to its obvious nature since the image was incorrect
        When setting up the register CRTC values, to have the status bar visible. The value I calculated for the register was incorrect, I had not doubled the value found. A TA helped by 
        explaining that you have to double it because that is how the VGA reads it a certain way. It took like 45 minutes to find the bug, fixing that took 1 line since it was only correcting
        1 value in the 18th register. 

   (2)  While implementing the status bar, the VGA was reading the buffer for the status bar incorrectly, It was causing the status bar to be discolored,
        and not have anything legible. It was a algorithmic bug. The cause was the text graphic not being correctly mapped to the planar buffer for the VGA display. So the loop
        that maps the VGA Status bar buffer had to be corrected to increment every 4th iterations rather than every single time. Finding this bug took 
        a couple hours, it was hard to figure out how to convert the graphic. It was a 1 line fix.

   (3)  The Status bar last pixel row was incorrect, it was causing the underscore to be slightly incorrect. The fix for this bug was just going to the last row and setting it to the 
        background color. Finding this bug took 5 mins, and implementing the change also took 5 minutes. It was a simple fix to the bug, since the value in the grpahic buffer was 
        getting changed randomly. So, it took like 3 lines of code to set the last pixel row to background color.


2.2 Bugs: 

     (1)   The image was not in great shape, only using basic colors. The bug was found when the images were shown. You can see the images being of lower
           quality. The fix was to have a break statement after the index is found in the level 4. So it was going back into the second level palette 
           even though a color was found in the level 4. It was a one line fix, which took 1 hour to find and fix. 

     (2)   There were black pixels were showing up on the screen. It was cause when the index was being set into the image where caused because level 2 
           index did not account for the 64 offset of the previous 64 palette values. The bug was found after 2 hours, as it took a while to narrow down
           where the bug can be in the full octtrees code. It was 1 edit by adding 64 to the index palette.

     (3)   The TUX was not registering the button press. The bug was found when the input.c test harness was not printing any values of the button when 
           clicking the emulator. The reason for the bug was that the file descriptor was not set, the fix was adding the lines of code provided to us 
           in the mp2 details. The fix took 3 hours to find, since the other code looked fine. 
     
     (4)  The TUX was not reseting correctly, as you press the reset button, the LEDS are suppose to flicker when reset is clicked, since the LEDS are 
           loaded with previous LED values. The fix was that the ack was not working as intended. The fix was found by a CA who realized that my ack 
           states were not being intialized to the right state. Finding the bug took 45 mins and implementing the fix took 15 minutes. It only took 5 
           lines, we just had to go through the logic for the intialization and setting of the LEDS. 
          




